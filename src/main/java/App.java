import java.util.List;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicReference;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    private ItemRepository itemRepository;
    private SalesPromotionRepository salesPromotionRepository;

    public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
        this.itemRepository = itemRepository;
        this.salesPromotionRepository = salesPromotionRepository;
    }

    public String bestCharge(List<String> inputs) {
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("============= Order details =============\n");
        //输入菜品的名字,返回价格和选择的策略
        List<Item> itemList = itemRepository.findAll();
        List<SalesPromotion> salesPromotionList = salesPromotionRepository.findAll();
        SalesPromotion salesPromotion = salesPromotionList.get(1);
        AtomicReference<Double> total = new AtomicReference<>(0d);
        AtomicReference<Double> discount = new AtomicReference<>(0d);
        StringBuilder halfMessage = new StringBuilder("Half price for certain dishes (");
        for (String input : inputs) {
            String[] inputSplit = input.split("x");
            if (inputSplit.length < 2)
                return "wrongly input";
            String itemId = inputSplit[0].trim();
            Integer amount = Integer.parseInt(inputSplit[1].trim());
            Optional<Item> itemOptional = itemList.stream().filter(item -> item.getId().equals(itemId)).findFirst();
            itemOptional.ifPresent(
                    item -> {
                        stringBuilder.append(item.getName())
                                .append(" x")
                                .append(inputSplit[1])
                                .append(" = ")
                                .append(((int) (item.getPrice() * amount)))
                                .append(" yuan\n");
                        if (salesPromotion.getRelatedItems().contains(item.getId())) {
                            discount.updateAndGet(v -> v + item.getPrice() * amount / 2);
                            halfMessage.append(item.getName()).append("，");

                        }
                        total.updateAndGet(v -> v + item.getPrice() * amount);
                    }
            );
        }
        stringBuilder.append("-----------------------------------\n");
        if (total.get() > 30) {
            if (discount.get() > 6)
                stringBuilder
                        .append("Promotion used:\n")
                        .append(halfMessage)
                        .insert(stringBuilder.length() - 1, ")")
                        .append("saving ")
                        .append(discount.get().intValue())
                        .append(" yuan\n")
                        .append("-----------------------------------\n");
            else
            {
                stringBuilder.append("Promotion used:\n")
                        .append("满30减6 yuan，saving 6 yuan\n")
                        .append("-----------------------------------\n");
                total.updateAndGet(v->v=total.get()-6+discount.get());
            }


        } else if (discount.get() > 0) {
            stringBuilder
                    .append("Promotion used:\n")
                    .append(halfMessage)
                    .insert(stringBuilder.length() - 1, ")")
                    .append("saving ")
                    .append(discount.get().intValue())
                    .append(" yuan\n");

        }

        stringBuilder.append("Total：")
                .append((int) (total.get() - discount.get()))
                .append(" yuan\n")
                .append("===================================");
        return stringBuilder.toString();
    }
}
